def collect_training_images(sub_directory,number_of_images):
  import re
  pattern = r'/([^/\d]+)(\d+)\.jpg$'
  print(sub_directory, number_of_images)
  for number,image in enumerate(os.listdir(sub_directory)):
    #print(number,os.path.join(sub_directory, image),number_of_images)
    if number == number_of_images - 1:
      break
    matches = re.search(pattern, image)
    label = matches.group(1)
    print(label,image)
    image_dictionary.update({image:label})
  return image_dictionary

def search_asl_images(directory, number_of_images):
  """
  Searches root directory until it creates dictionary enteries for a certain
  amount of images.
  imputs:
  directory
  number_of_images

  outputs:
  dictionary of images as keys and labels as values
  """
  image_dictionary = "No ASL photos found."
  curr_file = os.listdir(directory)
  for item in curr_file:
    if filename.endswith('.jpg') == True:
      sub_directory = os.join(directory,item)
      image_dictionary = collect_training_images(sub_directory, number_of_images)
    sub_directory = os.join(directory,item)
    image_dictionary = search_asl_images(sub_directory, number_of_images)
    if type(image_dictionary) == type({}):
      return image_dictionary
